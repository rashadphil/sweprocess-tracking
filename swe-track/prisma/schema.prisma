generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model companies {
  cid              Int              @id @default(autoincrement())
  company_name     String?          @unique @db.VarChar(255)
  website_link     String?          @db.VarChar(255)
  application_link String?          @db.VarChar(255)
  intern_salary    Int?
  popularity       Int?
  verified         Boolean?         @default(true)
  user_companies   user_companies[]
}

model user_companies {
  user_id      Int
  company_id   Int
  user_status  application_status?
  date_applied DateTime?           @db.Date
  company_name String?             @db.VarChar(255)
  companies    companies           @relation(fields: [company_id], references: [cid], onDelete: NoAction)
  users        users               @relation(fields: [user_id], references: [uid], onDelete: Cascade)
  szn          season              @default(s22) 

  @@id([user_id, company_id, szn], map: "user_company_id")
  @@unique([user_id, company_id, szn], map: "user_companies_user_company_unique")
}

model users {
  uid            Int                @id @default(autoincrement())
  username       String?            @unique @db.VarChar(255)
  email          String?            @unique @db.VarChar(255)
  full_name      String?            @db.VarChar(255)
  email_verified Boolean?
  date_created   DateTime?          @db.Date
  last_login     DateTime?          @db.Date
  membership     membership_status?
  picture        String?            @db.VarChar(512)
  last_update    DateTime?          @db.Timestamp(6)
  user_companies user_companies[]
  user_leetcode  user_leetcode[]
}

model leetcode {
  lid           Int             @id @default(autoincrement())
  title         String?         @db.VarChar(255)
  difficulty    difficulty?
  leetcode_tags leetcode_tags[]
  user_leetcode user_leetcode[]
}

model leetcode_tags {
  lid      Int
  tid      Int
  leetcode leetcode @relation(fields: [lid], references: [lid], onDelete: Cascade)
  tag      tag      @relation(fields: [tid], references: [tid], onDelete: Cascade)

  @@id([lid, tid], map: "leetcode_tags_id")
}

model tag {
  tid           Int             @id @default(autoincrement())
  tag_name      String?         @unique @db.VarChar(255)
  alias         String?         @db.VarChar(255)
  color         String?         @db.VarChar(255)
  count         Int?
  leetcode_tags leetcode_tags[]
}

model user_leetcode {
  uid         Int
  lid         Int
  date_solved DateTime? @db.Date
  leetcode    leetcode  @relation(fields: [lid], references: [lid], onDelete: Cascade, map: "users_leetcode_lid_fkey")
  users       users     @relation(fields: [uid], references: [uid], onDelete: Cascade, map: "users_leetcode_uid_fkey")

  @@id([uid, lid], map: "users_leetcode_id")
}

enum application_status {
  not_applied @map("not applied")
  rejected
  applied
  online_assesment @map("online assesment")
  interview_rounds @map("interview rounds")
  final_round @map("final round")
  offer
}

enum difficulty {
  easy
  medium
  hard
}

enum membership_status {
  free
  tier1
  tier2
}

enum season {
  s22
  w22
  ng22
  s23
  w23
  ng23
}