generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model companies {
  cid              Int              @id @default(autoincrement())
  company_name     String?          @unique @db.VarChar(255)
  website_link     String?          @db.VarChar(255)
  application_link String?          @db.VarChar(255)
  intern_salary    Int?
  popularity       Int?
  user_companies   user_companies[]
}

model user_companies {
  user_id      Int
  company_id   Int
  user_status  application_status?
  date_applied DateTime?           @db.Date
  company_name String?             @db.VarChar(255)
  companies    companies           @relation(fields: [company_id], references: [cid], onDelete: NoAction)
  users        users               @relation(fields: [user_id], references: [uid], onDelete: Cascade)

  @@id([user_id, company_id], map: "user_company_id")
  @@unique([user_id, company_id], map: "user_companies_user_company_unique")
}

model users {
  uid            Int                @id @default(autoincrement())
  username       String?            @unique @db.VarChar(255)
  email          String?            @unique @db.VarChar(255)
  full_name      String?            @db.VarChar(255)
  email_verified Boolean?
  date_created   DateTime?          @db.Date
  last_login     DateTime?          @db.Date
  membership     membership_status?
  picture        String?            @db.VarChar(512)
  last_update    DateTime?          @db.Timestamp(6)
  user_companies user_companies[]
}

enum application_status {
  not_applied @map("not applied")
  rejected
  applied
  online_assesment @map("online assesment")
  interview_rounds @map("interview rounds")
  final_round @map("final round")
  offer
}

enum membership_status {
  free
  tier1
  tier2
}
